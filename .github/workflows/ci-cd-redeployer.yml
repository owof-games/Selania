name: ✈️ CI/CD Redeployer (Public)

on:
  workflow_dispatch:
    inputs:
      runnerMain:
        type: string
        required: true
        default: 'ubuntu-latest'
      runnerMacos:
        type: string
        required: true
        default: 'macos-latest'
      buildVersion:
        description: "The release tag version to deploy from (e.g., v1.2.3)"
        required: true
        default: 'v0.0.0'
        type: string
      deployTargets:
        description: "JSON array of deploy targets (e.g., [\"s3\", \"firebase\"])"
        required: true
        default: '["itch.io"]'
        type: string
      buildTargets:
        description: "JSON array of build targets (e.g. [\"WebGL\",\"iOS\"]) - Optional (leave empty)"
        required: false
        type: string

permissions:
  contents: write

jobs:
  # ─────────────────────────────────────────────────────────────────────────────
  # 0. Sanitize Project Name
  # ─────────────────────────────────────────────────────────────────────────────
  sanitize_project_name:
    name: Sanitize Project Name
    runs-on: ${{ inputs.runnerMain }}
    outputs:
      sanitized_name: ${{ steps.sanitize.outputs.sanitized_name }}
    steps:
      - name: Run Project Name Sanitizer
        id: sanitize
        uses: RedGlow/unity-ci-templates/.github/actions/resolve-project-name@v1
        with:
          projectNameInput: ${{ vars.PROJECT_NAME }}

  # ─────────────────────────────────────────────────────────────────────────────
  # 1. Validate Release and Artifacts
  # ─────────────────────────────────────────────────────────────────────────────
  validate_release:
    name: Validate Release Tag and Artifacts
    runs-on: ${{ inputs.runnerMain }}
    defaults:
      run:
        shell: bash
    outputs:
      hasCombinedArtifacts: ${{ steps.check.outputs.hasCombinedArtifacts }}
    steps:
      - name: Install GitHub CLI
        shell: bash
        run: |
          if command -v gh &> /dev/null; then
            echo "GitHub CLI already installed."
          elif [[ "$RUNNER_OS" == "Linux" ]]; then
            sudo apt-get update
            sudo apt-get install gh -y
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            brew install gh
          else
            echo "Please ensure GitHub CLI is installed on your Windows runner." >&2
            exit 1
          fi

      - name: Check GitHub Release Exists and Artifacts
        id: check
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🔍 Checking if release '${{ inputs.buildVersion }}' exists..." | tee -a "$GITHUB_STEP_SUMMARY"

          # Attempt to fetch release data and save to file
          if ! gh api repos/${{ github.repository }}/releases/tags/${{ inputs.buildVersion }} --jq '.' > release.json; then
            echo "❌ Release '${{ inputs.buildVersion }}' not found or API call failed." | tee -a "$GITHUB_STEP_SUMMARY"
            exit 1
          fi

          echo "✅ Release found. Redeploying: '${{ inputs.buildVersion }}'..." | tee -a "$GITHUB_STEP_SUMMARY"

          # Load release data
          RELEASE_DATA=$(cat release.json)

          # Check for combined artifact
          COMBINED_FOUND=$(echo "$RELEASE_DATA" | jq -r '.assets[]?.name' | grep -c 'all-platforms' || true)
          if [ "$COMBINED_FOUND" -gt 0 ]; then
            echo "✅ Combined artifact detected." | tee -a "$GITHUB_STEP_SUMMARY"
            echo "hasCombinedArtifacts=true" >> "$GITHUB_OUTPUT"
          else
            echo "ℹ️ No combined artifact detected." | tee -a "$GITHUB_STEP_SUMMARY"
            echo "hasCombinedArtifacts=false" >> "$GITHUB_OUTPUT"
          fi

  # ─────────────────────────────────────────────────────────────────────────────
  # 2. Redeploy
  # ─────────────────────────────────────────────────────────────────────────────
  redeploy:
    name: Redeploy from Release
    needs: 
      - sanitize_project_name
      - validate_release
    uses: RedGlow/unity-ci-templates/.github/workflows/step-4-deploy.yml@v1
    with:
      buildType: release
      runnerMain: ${{ inputs.runnerMain }}
      runnerMacos: ${{ inputs.runnerMacos }}
      buildVersion: ${{ inputs.buildVersion }}
      projectName: ${{ needs.sanitize_project_name.outputs.sanitized_name }}
      deployTargets: ${{ inputs.deployTargets || '[]' }}
      buildTargets: ${{ inputs.buildTargets != '' && inputs.buildTargets || vars.BUILD_TARGETS || '[]' }}
      hasCombinedArtifacts: ${{ needs.validate_release.outputs.hasCombinedArtifacts }}
      artifactSource: release
    secrets: inherit

  # ─────────────────────────────────────────────────────────────────────────────
  # 3. Notify
  # ─────────────────────────────────────────────────────────────────────────────
  notify:
    name: Notify
    needs: 
      - redeploy
    uses: RedGlow/unity-ci-templates/.github/workflows/step-5-notify.yml@v1
    with:
      runnerMain: ${{ inputs.runnerMain }}
      buildVersion: ${{ inputs.buildVersion }}
      releaseResult: 'success'
      releaseErrorMessage: ''
      deployResult: ${{ needs.redeploy.result }}
      testsHasFails: 0
      testsTotal: 0
      testsPassed: 0
      testsFailedNames: ''
    secrets: inherit